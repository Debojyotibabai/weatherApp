{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","InputValue","SetInputValue","Name","Temp","Description","Details","SetDetails","className","onSubmit","e","preventDefault","alert","fetch","then","response","json","data","name","main","temp","weather","description","type","placeholder","onChange","target","value","required","autoFocus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAuDeA,EArDH,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACTC,EADS,KACGC,EADH,OAKcF,mBAAS,CACrCG,KAAM,0BACNC,KAAM,GACNC,YAAa,KARC,mBAKTC,EALS,KAKAC,EALA,KA6BhB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAIA,UAAU,eAAd,qBACU,uBADV,UAGA,uBAAMC,SAxBK,SAACC,GACdA,EAAEC,iBACiB,KAAfV,EACFW,MAAM,4BAENC,MAAM,qDAAD,OACkDZ,EADlD,yDAGFa,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAW,CACTJ,KAAMc,EAAKC,KACXd,KAAK,GAAD,OAAKa,EAAKE,KAAKC,KAAf,QACJf,YAAaY,EAAKI,QAAQ,GAAGC,iBAGnCpB,EAAc,MAQUM,UAAU,SAAlC,UACE,uBACEe,KAAK,OACLC,YAAY,YACZC,SApCS,SAACf,GAChBR,EAAcQ,EAAEgB,OAAOC,QAoCjBC,UAAQ,EACRC,WAAS,EACTF,MAAO1B,IAET,wBAAQsB,KAAK,SAAb,uBAEF,sBAAKf,UAAU,SAAf,UACE,6BAAKF,EAAQH,OACb,6BAAKG,EAAQF,OACb,4BAAIE,EAAQD,qBCtCLyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0efa8bc2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nconst App = () => {\r\n  const [InputValue, SetInputValue] = useState(\"\");\r\n  const GetValue = (e) => {\r\n    SetInputValue(e.target.value);\r\n  };\r\n  const [Details, SetDetails] = useState({\r\n    Name: \"Search for city namesss\",\r\n    Temp: \"\",\r\n    Description: \"\",\r\n  });\r\n  const Search = (e) => {\r\n    e.preventDefault();\r\n    if (InputValue === \"\") {\r\n      alert(\"Please add a city name.\");\r\n    } else {\r\n      fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${InputValue}&appid=142edd739fe653be18bd7941f7adf3ca&units=metric`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          SetDetails({\r\n            Name: data.name,\r\n            Temp: `${data.main.temp}Â°`,\r\n            Description: data.weather[0].description,\r\n          });\r\n        });\r\n      SetInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      <h1 className=\"main-heading\">\r\n        Weather <br></br> Map\r\n      </h1>\r\n      <form onSubmit={Search} className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type here\"\r\n          onChange={GetValue}\r\n          required\r\n          autoFocus\r\n          value={InputValue}\r\n        ></input>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"result\">\r\n        <h1>{Details.Name}</h1>\r\n        <h3>{Details.Temp}</h3>\r\n        <p>{Details.Description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}